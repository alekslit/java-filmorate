-- создаём таблицу mpa_rating (с возрастными рейтингами фильмов):
CREATE TABLE IF NOT EXISTS mpa_rating(
    mpa_rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40)
);

-- создаём таблицу films (с фильмами):
CREATE TABLE IF NOT EXISTS films(
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40),
    description varchar(200),
    release_date date CONSTRAINT date_constr CHECK (release_date >= '1895-12-28'),
    duration integer CONSTRAINT duration_constr CHECK (duration > 0),
    mpa_rating_id INTEGER REFERENCES mpa_rating (mpa_rating_id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- создаём таблицу users (с пользователями):
CREATE TABLE IF NOT EXISTS users(
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(100) NOT NULL,
    login varchar(40) NOT NULL CONSTRAINT login_constr CHECK (login NOT LIKE ' '),
    name varchar(40),
    birthday date CONSTRAINT birthday_constr CHECK (birthday <= CURDATE())
);

-- создаём таблицу genre (с жанрами фильмов):
CREATE TABLE IF NOT EXISTS genre(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL
);

-- создаём таблицу film_genres (связывает фильмы и жанры):
CREATE TABLE IF NOT EXISTS film_genres(
    film_genres_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    genre_id INTEGER REFERENCES genre (genre_id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- создаём таблицу film_likes (связывает фильмы и лайки пользователей):
CREATE TABLE IF NOT EXISTS film_likes(
    film_likes_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- создаём таблицу user_friendship (связывает двух пользователей в качестве друзей):
CREATE TABLE IF NOT EXISTS user_friendship(
    user_friendship_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    friend_id integer
);